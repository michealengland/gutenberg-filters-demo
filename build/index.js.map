{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ch1-block-style-variations/index.js","webpack:///./src/ch15-parser-filters/index.js","webpack:///./src/ch16-combining-filters/index.js","webpack:///./src/ch3-register-block-type/index.js","webpack:///./src/ch5-get-save-content/index.js","webpack:///./src/chX-inserting-controls/index.js","webpack:///./src/index.js"],"names":["wp","blocks","registerBlockStyle","name","label","addListBlockClassName","settings","lodash","assign","supports","className","hooks","addFilter","addBackgroundColorStyle","props","console","log","style","backgroundColor","demoToggleSettings","attributes","testToggle","type","defualt","el","element","createElement","withInspectorControls","compose","createHigherOrderComponent","BlockEdit","Fragment","editor","InspectorControls","components","ToggleControl","checked","onChange","setAttributes"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/**\n * Based on: Block Style Variations\n *\n * @url https://developer.wordpress.org/block-editor/developers/filters/block-filters/#block-style-variations\n */\n// Add a class name to core gallery.\nwp.blocks.registerBlockStyle( 'core/gallery', {\n\tname: 'roundy-round', // string for class name.\n\tlabel: 'Roundy Round Borders', // Label displayed in the editor.\n\t// isDefault: true,\n} );\n\n// Add another class name.\nwp.blocks.registerBlockStyle( 'core/gallery', {\n\tname: 'blocky-block', // string for class name.\n\tlabel: 'Blocky Block Gallery', // Label displayed in the editor.\n} );\n\n// Remove block style.\n// wp.blocks.unregisterBlockStyle( 'core/gallery', 'blocky-block' );\n\n// Remove block style once the DOM is fully loaded.\n// wp.domReady( function() {\n// \twp.blocks.unregisterBlockStyle( 'core/gallery', 'blocky-block' );\n// } );\n","/**\n *\n *\n * @note At the present time itâ€™s not possible to replace the client-side parser.\n *\n * @link https://developer.wordpress.org/block-editor/developers/filters/parser-filters/\n */","// This demo will cover an example of filters used in combination together.\n","/**\n * Adds a class to the core/list block called wp-block-list.\n *\n * @param settings Object = registered block settings.\n * @param name = 'block name'\n * @return Object\n *\n * @link https://developer.wordpress.org/block-editor/developers/filters/block-filters/#blocks-registerblocktype\n */\nfunction addListBlockClassName( settings, name ) {\n\t// returns if block is not in the editor.\n\tif ( name !== 'core/list' ) {\n\t\treturn settings;\n\t}\n\n\t// Enableds the a default class name for this block.\n\t// eslint-disable-next-line no-undef\n\treturn lodash.assign(\n\t\t{},\n\t\tsettings, {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tsupports: lodash.assign( {}, settings.supports, {\n\t\t\t\tclassName: true,\n\t\t\t} ),\n\t\t}\n\t);\n}\n\n// Client side filter registration.\nwp.hooks.addFilter(\n\t'blocks.registerBlockType',\n\t'gfd/class-names/list-block',\n\taddListBlockClassName\n);\n","/**\n * A filter that applies to all blocks returning a WP Element in the save function.\n *\n * @param {*} props\n */\nfunction addBackgroundColorStyle( props, settings ) {\n\n\tconsole.log( settings.name );\n\n\tif ( 'core/paragraph' !== settings.name ) {\n\t\treturn;\n\t}\n\n\treturn lodash.assign( props, { style: { backgroundColor: 'red' } } );\n}\n\nwp.hooks.addFilter(\n\t'blocks.getSaveContent.extraProps',\n\t'gfd/add-background-color-style',\n\taddBackgroundColorStyle\n);\n","/**\n * Register Toggle Settings.\n *\n * @param {*} settings Object.\n * @param {*} name\n * @return {*} settings Object.\n */\nfunction demoToggleSettings( settings, name ) {\n\t// Check for specific block.\n\tif ( 'core/quote' === name ) {\n\t\t// Set our toggle to false by default.\n\t\tsettings.attributes.testToggle = {\n\t\t\ttype: 'boolean',\n\t\t\tdefualt: false,\n\t\t};\n\t}\n\n\treturn settings;\n}\n\n// wp.hooks.addFilter( 'hook, 'namespace', 'callback' );\nwp.hooks.addFilter( 'blocks.registerBlockType', 'wds', demoToggleSettings );\n\n/**\n * This function adds our toggle to the editor.\n */\nconst el = wp.element.createElement;\n\nconst withInspectorControls = wp.compose.createHigherOrderComponent( function( BlockEdit ) {\n\treturn function( props ) {\n\t\t// Return without change.\n\t\tif ( 'core/list' !== props.name ) {\n\t\t\treturn BlockEdit;\n\t\t}\n\n\t\t// Output all values in block.\n\t\t// console.log( props );\n\t\t// Gets toggle value defined in demoToggleSettings().\n\t\tconst testToggle = props.attributes.testToggle;\n\n\t\tconst element = el(\n\t\t\twp.element.Fragment,\n\t\t\t{},\n\t\t\tel( BlockEdit, props ),\n\t\t\tel(\n\t\t\t\twp.editor.InspectorControls,\n\t\t\t\t{},\n\t\t\t\tel( wp.components.ToggleControl,\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: 'This toggle is inserted with a filter.',\n\t\t\t\t\t\tchecked: testToggle,\n\t\t\t\t\t\tonChange: function() {\n\t\t\t\t\t\t\tprops.setAttributes(\n\t\t\t\t\t\t\t\t{ testToggle: ! testToggle }\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\treturn element;\n\t};\n}, 'withInspectorControls' );\n\nwp.hooks.addFilter( 'editor.BlockEdit', 'my-plugin/with-inspector-controls', withInspectorControls );\n","/**\n * Internal dependencies\n */\nimport './ch1-block-style-variations';\nimport './ch3-register-block-type';\nimport './ch4-get-save-element';\nimport './ch5-get-save-content';\nimport './ch6-get-block-default-classname';\nimport './ch7-switch-block-type';\nimport './ch8-get-block-attributes';\nimport './ch9-block-edit';\nimport './ch10-block-list-block';\nimport './ch11-blacklist-blocks';\nimport './ch12-whitelist-blocks';\nimport './ch13-hide-blocks-from-inserter';\nimport './ch14-block-categories';\nimport './ch15-parser-filters';\nimport './ch16-combining-filters';\nimport './chX-inserting-controls';\n"],"sourceRoot":""}